*,
*::before,
*::after {
  /* reset */
  margin: 0;
  padding: 0;
  box-sizing: border-box;

  /* inheritance */
  font: inherit;
  color: inherit;
  letter-spacing: inherit;

  /* pretty */
  text-rendering: optimizeLegibility;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  outline-color: var(--blue);

  /* theme transition */
  transition: none 25ms linear;
  /* not vibing */
  /* transition-property: color, background-color; */
}

::selection {
  /* pretty */
  color: var(--light);
  background-color: var(--blue);
}

body {
  font-family: var(--ff-normal);
  font-size: 1.25rem;
  line-height: 1.5;
  color: var(--dark);
  background-color: var(--light);
  scroll-behavior: smooth;
}

button {
  cursor: pointer;
}

button.link {
  background-color: inherit;
  border: initial;
}

a,
button.link {
  color: var(--pop);
}

:where(a, button.link):not(.mask, .hide):hover {
  color: var(--light);
  background-color: var(--pop);
}

:where(a, button.link):is(.mask, .hide) {
  color: inherit;
  text-decoration: none;
}

:where(a, button.link):not(.hide).mask:hover {
  text-decoration: underline;
}

h1 {
  font-size: 2.7rem;
}

h2 {
  font-size: 2rem;
}

h3 {
  font-size: 1.5rem;
}

h1,
h2,
h3,
th,
dt,
[role="heading"] {
  font-family: var(--ff-heading);
  font-weight: var(--fw-bold);
  letter-spacing: var(--ls-heading);
}

/* inline headings */
[role="heading"]::after {
  content: ":";
}

h1,
h2,
h3 {
  line-height: var(--lh-heading);
}

/* sizing not implemented */
h4,
h5,
h6 {
  display: none;
}

strong,
label {
  font-weight: var(--fw-bold);
}

q,
blockquote,
em,
figcaption,
[role="term"] {
  font-style: italic;
}

ul,
ol {
  margin-left: 1.25em;
}

ol {
  counter-reset: li;
}

ol > li {
  counter-increment: li;
}

ol > li::marker {
  content: counter(li) ") ";
}

select {
  border-radius: var(--border-radius);
  color: var(--black);
  background-color: var(--white);
}

label + select {
  margin-left: 0.5rem;
}

figure {
  display: flex;
  flex-direction: column;
}

/* ignore code examples */
figure > :not(pre, figcaption) {
  align-self: center;
}

/* code examples need some space */
figure > pre + figcaption {
  margin-top: var(--space-1);
}

figcaption > .source {
  margin-left: var(--space-1);
  float: right;
}

figure img {
  border-radius: var(--border-radius);
}

img {
  max-width: 100%;
}

table {
  border-collapse: separate;
  border-spacing: var(--space-2) 0;
  /* remove horizontal margin from border-spacing */
  margin-left: calc(var(--space-2) * -1);
  margin-right: calc(var(--space-2) * -1);
  width: 100%;
}

tr {
  vertical-align: top;
}

th {
  font-family: var(--ff-heading);
  font-weight: var(--fw-bold);
  text-align: left;
}

sup {
  font-size: max(0.85em, var(--fs-min));
}

code {
  font-family: var(--ff-mono);
}

pre {
  overflow-y: auto;
  font-size: 0.9em;
}

code:not(.hljs) {
  font-size: 0.9em;
  padding: 0 0.25ch;
  border-radius: var(--border-radius);
}

iframe {
  border: none;
}
